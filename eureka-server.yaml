spring:
  profiles: default
  application:
    name: eureka-server
eureka:
  client:
    fetchRegistry: false
#    registryFetchIntervalSeconds: 30
#    initialInstanceInfoReplicationIntervalSeconds: 40
#    eurekaServerReadTimeoutSeconds: 8
#    disableDelta: false
#    availabilityZones: {}
#    cacheRefreshExecutorExponentialBackOffBound: 10
#    eurekaConnectionIdleTimeoutSeconds: 30
#    enabled: true
#    backupRegistryImpl: null
#    eurekaServerDNSName: null
#    logDeltaDiff: false
#    proxyPort: null
#    eurekaServerPort: null
#    encoderName: null
#    fetchRemoteRegionsRegistry: null
#    proxyUserName: null
#    eurekaServerTotalConnectionsPerHost: 50
#    eurekaServerConnectTimeoutSeconds: 5
#    dollarReplacement: "_-"
#    useDnsForFetchingServiceUrls: false
#    heartbeatExecutorExponentialBackOffBound: 10
#    clientDataAccept: "full"
#    proxyPassword: null
#    cacheRefreshExecutorThreadPoolSize: 2
#    eurekaServerURLContext: null
#    preferSameZoneEureka: true
#    proxyHost: null
#    allowRedirects: false
#    escapeCharReplacement: "__"
#    onDemandUpdateStatusChange: true
#    decoderName: null
#    eurekaServerTotalConnections: 200
#    instanceInfoReplicationIntervalSeconds: 30
#    registerWithEureka: false
#    filterOnlyUpInstances: true
#    eurekaServiceUrlPollIntervalSeconds: 300
#    registryRefreshSingleVipAddress: null
#    region: "us-east-1"
#    heartbeatExecutorThreadPoolSize: 2
#  server:
#    remoteRegionAppWhitelist: null
#    rateLimiterThrottleStandardClients: false
#    maxIdleThreadAgeInMinutesForPeerReplication: 15
#    remoteRegionTotalConnectionsPerHost: 500
#    maxElementsInStatusReplicationPool: 10000
#    peerNodeTotalConnections: 1000
#    disableDelta: false
#    disableTransparentFallbackToOtherRegion: false
#    jsonCodecName: null
#    peerNodeTotalConnectionsPerHost: 500
#    remoteRegionTrustStorePassword: "******"
#    maxThreadsForPeerReplication: 20
#    remoteRegionTrustStore: ""
#    rateLimiterEnabled: false
#    remoteRegionUrlsWithName: {}
#    renewalPercentThreshold: 0.85
#    useReadOnlyResponseCache: true
#    enableReplicatedRequestCompression: false
#    responseCacheAutoExpirationInSeconds: 180
#    peerEurekaStatusRefreshTimeIntervalMs: 30000
#    deltaRetentionTimerIntervalInMs: 30000
#    registrySyncRetries: 5
#    disableDeltaForRemoteRegions: false
#    remoteRegionConnectionIdleTimeoutSeconds: 30
#    numberOfReplicationRetries: 5
#    retentionTimeInMSInDeltaQueue: 180000
#    remoteRegionReadTimeoutMs: 1000
#    maxThreadsForStatusReplication: 1
#    maxElementsInPeerReplicationPool: 10000
#    responseCacheUpdateIntervalMs: 30000
#    peerNodeConnectTimeoutMs: 200
#    minThreadsForStatusReplication: 1
#    batchReplication: false
#    peerNodeReadTimeoutMs: 200
#    maxTimeForReplication: 30000
#    peerEurekaNodesUpdateIntervalMs: 600000
#    rateLimiterRegistryFetchAverageRate: 500
#    renewalThresholdUpdateIntervalMs: 900000
#    remoteRegionTotalConnections: 1000
#    primeAwsReplicaConnections: true
#    rateLimiterPrivilegedClients: []
#    listAutoScalingGroupsRoleName: "ListAutoScalingGroups"
#    xmlCodecName: null
#    remoteRegionFetchThreadPoolSize: 20
#    logIdentityHeaders: true
#    peerNodeConnectionIdleTimeoutSeconds: 30
#    syncWhenTimestampDiffers: true
#    remoteRegionConnectTimeoutMs: 1000
#    remoteRegionRegistryFetchInterval: 30
#    waitTimeInMsWhenSyncEmpty: 0
#    rateLimiterFullFetchAverageRate: 100
#    remoteRegionUrls: null
#    enableSelfPreservation: true
#    minThreadsForPeerReplication: 5
#    evictionIntervalTimerInMs: 60000
#    rateLimiterBurstSize: 10
#    maxIdleThreadInMinutesAgeForStatusReplication: 10
#  instance:
#    appGroupName: null
#    nonSecurePortEnabled: true
#    statusPageUrl: null
#    initialStatus: "UP
#    instanceEnabledOnit: false
#    homePageUrl: null
#    securePort: 443
#    securePortEnabled: false
#    healthCheckUrlPath: "/health"
#    leaseExpirationDurationInSeconds: 3
#    metadataMap: {}
#    preferIpAddress: false
#    healthCheckUrl: null
#    statusPageUrlPath: "/info"
#    virtualHostName: "eureka-server
#    ipAddress: "192.168.214.1
#    leaseRenewalIntervalInSeconds: 1
#    homePageUrlPath: "/
#    nonSecurePort: 9002
#    namespace: "eureka
#    secureVirtualHostName: null
#    secureHealthCheckUrl: null

---
spring:
  profiles: server1
server:
  port: 9001
eureka:
  instance:
    hostname: localhost
  client:
    serviceUrl:
      defaultZone: http://localhost:9002/eureka/

---
spring:
  profiles: server2
server:
  port: 9002
eureka:
  instance:
    hostname: localhost
  client:
    serviceUrl:
      defaultZone: http://localhost:9001/eureka/
